{"version":3,"file":"static/js/87.874964aa.chunk.js","mappings":"qPACA,EAA2B,mCAA3B,EAA8E,wCAA9E,EAAiI,mCAAjI,EAA4K,gCAA5K,EAAmN,+B,SCmDnN,EA/CyB,WACvB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CACA,IAAMM,EAAO,mCAAG,6GAEeC,EAAAA,EAAAA,aAAiBP,GAFhC,OAENQ,EAFM,OAGZJ,EAAQI,GAHI,gDAKZC,QAAQC,IAAR,MALY,yDAAH,qDAQbJ,GAToB,CAUrB,GAAE,CAACN,KAGF,8BACGG,IACC,8BACE,eAAIQ,UAAWC,EAAf,SACGT,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAGP,iBAAMJ,UAAWC,EAAjB,gBAEF,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BG,KAC7B,eAAGJ,UAAWC,EAAd,WACE,yCADF,IAC2BI,UAZtBF,EADD,SAuBrB,C,qDC9CKM,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCAeVC,EAAiB,mCAAG,2GAAOC,EAAP,+BAAc,MAAOC,EAArB,+BAA8B,MAA9B,SACDP,EAAS,aAAD,OAAcM,EAAd,YAAsBC,EAAtB,MADP,UAEA,OADlBC,EADkB,QAEXC,OAFW,yCAEYD,EAASE,KAAKC,SAF1B,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACCb,EAAS,uBAAD,OAAwBa,IADjC,UAEE,OADlBL,EADgB,QAETC,OAFS,yCAEcD,EAASE,KAAKC,SAF5B,2CAAH,sDAKfG,EAAY,mCAAG,WAAMpB,GAAN,uFACIM,EAAS,UAAD,OAAWN,EAAX,MADZ,UAEK,OADlBc,EADa,QAENC,OAFM,yCAEiBD,EAASE,MAF1B,2CAAH,sDAKZK,EAAY,mCAAG,WAAMrB,GAAN,uFACIM,EAAS,UAAD,OAAWN,EAAX,cADZ,UAEK,OADlBc,EADa,QAENC,OAFM,yCAEiBD,EAASE,KAAK3B,MAF/B,2CAAH,sDAKZiC,EAAe,mCAAG,WAAMtB,GAAN,uFACCM,EAAS,UAAD,OAAWN,EAAX,cADT,UAEE,OADlBc,EADgB,QAETC,OAFS,yCAEcD,EAASE,KAAKC,SAF5B,2CAAH,sDAKfxB,EAAM,CACVkB,kBAAAA,EACAO,gBAAAA,EACAE,aAAAA,EACAC,aAAAA,EACAC,gBAAAA,GAEF,K","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsCast/MovieDetailsCast.module.scss?8f5e","components/MovieDetailsCast/MovieDetailsCast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"MovieDetailsCast_castList__wlZZE\",\"defaultAvatar\":\"MovieDetailsCast_defaultAvatar__Tv87P\",\"castInfo\":\"MovieDetailsCast_castInfo__YsiHa\",\"actor\":\"MovieDetailsCast_actor__K315e\",\"role\":\"MovieDetailsCast_role__WB+Qk\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport styles from './MovieDetailsCast.module.scss';\n\nconst MovieDetailsCast = () => {\n  const { movieID } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    if (!movieID) return;\n    const getCast = async () => {\n      try {\n        const receivedCast = await api.getMovieCast(movieID);\n        setCast(receivedCast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieID]);\n\n  return (\n    <>\n      {cast && (\n        <section>\n          <ul className={styles.castList}>\n            {cast.map(({ id, name, character, profile_path }) => (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w185${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  <span className={styles.defaultAvatar}> </span>\n                )}\n                <div className={styles.castInfo}>\n                  <p className={styles.actor}>{name}</p>\n                  <p className={styles.role}>\n                    <span>Character:</span> {character}\n                  </p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsCast;\n","import axios from 'axios';\n\nconst API_KEY = '431ab85139813dba3796c445694ce723';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n/**\n * Function for fetching tranding movies from TMDB (The movie data base) API.\n * @param {string=} [type=all] - Type of content. Allowed: all, movie, tv, person. Default = all\n * @param {string=[day]} [period=day] - Time window foe rating. Allowed: day, week. Default = day\n * @returns {Array.<object>} Array of selected content objects\n */\nconst getTrendingMovies = async (type = 'all', period = 'day') => {\n  const response = await instance(`/trending/${type}/${period}?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieByQuery = async query => {\n  const response = await instance(`/search/movie?query=${query}`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieById = async id => {\n  const response = await instance(`/movie/${id}?`);\n  if (response.status === 200) return response.data;\n};\n\nconst getMovieCast = async id => {\n  const response = await instance(`/movie/${id}/credits?`);\n  if (response.status === 200) return response.data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await instance(`/movie/${id}/reviews?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst api = {\n  getTrendingMovies,\n  getMovieByQuery,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;\n"],"names":["movieID","useParams","useState","cast","setCast","useEffect","getCast","api","receivedCast","console","log","className","styles","map","id","name","character","profile_path","src","alt","instance","axios","baseURL","params","api_key","getTrendingMovies","type","period","response","status","data","results","getMovieByQuery","query","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}