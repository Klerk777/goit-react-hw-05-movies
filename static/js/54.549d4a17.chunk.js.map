{"version":3,"file":"static/js/54.549d4a17.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsCard/MovieDetailsCard.module.scss?9b63","components/MovieDetailsCard/MovieDetailsCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.scss?57ee","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"100\"\n      width=\"100\"\n      radius=\"9\"\n      color=\"#f1c40fed\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        position: 'relative',\n        top: '20px',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieDetailsCard_title__16iJq\",\"movieCard\":\"MovieDetailsCard_movieCard__qyYyJ\",\"poster\":\"MovieDetailsCard_poster__GV3yk\",\"info\":\"MovieDetailsCard_info__P1aCC\"};","import defaultPoster from '../../images/defaultPoster.png';\nimport styles from './MovieDetailsCard.module.scss';\nimport PropTypes from 'prop-types';\n\nconst MovieDetailsCard = ({ movie }) => {\n  const {\n    title,\n    poster_path,\n    release_date,\n    genres,\n    status,\n    vote_average,\n    overview,\n  } = movie;\n\n  const genresList = genres.map(item => item.name).join(', ');\n  return (\n    <section>\n      <h2 className={styles.title}>{title}</h2>\n      <article className={styles.movieCard}>\n        <img\n          className={styles.poster}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n        />\n        <div className={styles.info}>\n          <p>\n            <span>Overview: </span> <br />\n            {overview}\n          </p>\n\n          <p>\n            <span>Status: </span> {status}\n          </p>\n          <p>\n            {status === 'Released' && (\n              <>\n                <span>Release date: </span>\n                {release_date}\n              </>\n            )}\n          </p>\n          <p>\n            <span>Genres: </span> {genresList}\n          </p>\n          <p>\n            <span>Reating: </span> {vote_average.toFixed(1)}\n          </p>\n        </div>\n      </article>\n    </section>\n  );\n};\n\nexport default MovieDetailsCard;\n\nMovieDetailsCard.propTypes = {\n  movie: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"linksBar\":\"MovieDetails_linksBar__qrH0J\",\"link\":\"MovieDetails_link__jKv3y\",\"backBtn\":\"MovieDetails_backBtn__L7sYU\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport api from '../../services/api';\nimport MovieDetailsCard from '../../components/MovieDetailsCard/MovieDetailsCard';\nimport styles from './MovieDetails.module.scss';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const { movieID } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const returnLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieID) return;\n    const getMovieDetails = async () => {\n      try {\n        setisLoading(true);\n        const receivedMovie = await api.getMovieById(movieID);\n        setMovie(receivedMovie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setisLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieID]);\n\n  const goBack = () => navigate(returnLink);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>error</p>}\n      <main>\n        <button className={styles.backBtn} onClick={goBack}>\n          &lt;-- Go back\n        </button>\n        {movie && <MovieDetailsCard movie={movie} />}\n        <div>\n          <h3>Additional information</h3>\n          <ul className={styles.linksBar}>\n            <li>\n              <Link\n                className={styles.link}\n                state={{ from: returnLink }}\n                to=\"cast\"\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                className={styles.link}\n                state={{ from: returnLink }}\n                to=\"reviews\"\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback=\"Loading...\">\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '431ab85139813dba3796c445694ce723';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n/**\n * Function for fetching tranding movies from TMDB (The movie data base) API.\n * @param {string=} [type=all] - Type of content. Allowed: all, movie, tv, person. Default = all\n * @param {string=[day]} [period=day] - Time window foe rating. Allowed: day, week. Default = day\n * @returns {Array.<object>} Array of selected content objects\n */\nconst getTrendingMovies = async (type = 'all', period = 'day') => {\n  const response = await instance(`/trending/${type}/${period}?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieByQuery = async query => {\n  const response = await instance(`/search/movie?query=${query}`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieById = async id => {\n  const response = await instance(`/movie/${id}?`);\n  if (response.status === 200) return response.data;\n};\n\nconst getMovieCast = async id => {\n  const response = await instance(`/movie/${id}/credits?`);\n  if (response.status === 200) return response.data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await instance(`/movie/${id}/reviews?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst api = {\n  getTrendingMovies,\n  getMovieByQuery,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","position","top","wrapperClassName","visible","movie","title","poster_path","release_date","genres","status","vote_average","overview","genresList","map","item","name","join","className","styles","src","defaultPoster","alt","toFixed","useState","setMovie","error","setError","isLoading","setisLoading","movieID","useParams","navigate","useNavigate","returnLink","useLocation","state","from","useEffect","getMovieDetails","api","receivedMovie","message","Loader","onClick","to","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrendingMovies","type","period","response","data","results","getMovieByQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}