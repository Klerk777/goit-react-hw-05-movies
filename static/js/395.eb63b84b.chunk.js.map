{"version":3,"file":"static/js/395.eb63b84b.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MovieItem/MovieItem.module.scss?ba96","components/MoviesList/MovieItem/MovieItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.scss?ce6f","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"100\"\n      width=\"100\"\n      radius=\"9\"\n      color=\"#f1c40fed\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        position: 'relative',\n        top: '20px',\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieItem_title__Jgf85\",\"poster\":\"MovieItem_poster__IBPEs\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../../images/defaultPoster.png';\nimport styles from './MovieItem.module.scss';\n\nconst MovieItem = ({ movies, location }) => {\n  return movies.map(({ id, poster_path, title, name }) => {\n    return (\n      <li key={id} className={styles.item}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          <div>\n            <img\n              className={styles.poster}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : defaultPoster\n              }\n              alt={title ?? name}\n            />\n            <p className={styles.title}>{title ?? name}</p>\n          </div>\n        </Link>\n      </li>\n    );\n  });\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__Ea3rL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from './MovieItem/MovieItem';\nimport styles from './MoviesList.module.scss';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <>\n      <ul className={styles.list}>\n        <MovieItem movies={movies} location={location} />\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__1aNQh\"};","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from '../../services/api';\nimport styles from './Home.module.scss';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const receivedMovies = await api.getTrendingMovies('movie', 'day');\n        setMovies(receivedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1 className={styles.title}>Trending today</h1>\n      {movies && <MoviesList movies={movies} location={location} />}\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '431ab85139813dba3796c445694ce723';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n/**\n * Function for fetching tranding movies from TMDB (The movie data base) API.\n * @param {string=} [type=all] - Type of content. Allowed: all, movie, tv, person. Default = all\n * @param {string=[day]} [period=day] - Time window foe rating. Allowed: day, week. Default = day\n * @returns {Array.<object>} Array of selected content objects\n */\nconst getTrendingMovies = async (type = 'all', period = 'day') => {\n  const response = await instance(`/trending/${type}/${period}?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieByQuery = async query => {\n  const response = await instance(`/search/movie?query=${query}`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst getMovieById = async id => {\n  const response = await instance(`/movie/${id}?`);\n  if (response.status === 200) return response.data;\n};\n\nconst getMovieCast = async id => {\n  const response = await instance(`/movie/${id}/credits?`);\n  if (response.status === 200) return response.data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await instance(`/movie/${id}/reviews?`);\n  if (response.status === 200) return response.data.results;\n};\n\nconst api = {\n  getTrendingMovies,\n  getMovieByQuery,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","position","top","wrapperClassName","visible","movies","location","map","id","poster_path","title","name","className","styles","to","state","from","src","defaultPoster","alt","useState","setMovies","isLoading","setIsLoading","error","setError","useLocation","useEffect","getMovies","api","receivedMovies","message","MoviesList","Loader","instance","axios","baseURL","params","api_key","getTrendingMovies","type","period","response","status","data","results","getMovieByQuery","query","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}